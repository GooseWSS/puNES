{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"COMPAT_VARYING     vec2 _oney;\n"
"COMPAT_VARYING     vec2 _onex;\n"
"COMPAT_VARYING     vec2 _texCoord;\n"
"struct tex_coords {\n"
"    vec2 _texCoord;\n"
"    vec2 _onex;\n"
"    vec2 _oney;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"vec4 _oPosition1;\n"
"input_dummy _IN1;\n"
"vec4 _r0006;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 COLOR;\n"
"COMPAT_VARYING vec4 COL0;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec4 _oColor;\n"
"    tex_coords _coords;\n"
"    _r0006 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0006 = _r0006 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0006 = _r0006 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0006 = _r0006 + VertexCoord.w*MVPMatrix[3];\n"
"    _oPosition1 = _r0006;\n"
"    _oColor = COLOR;\n"
"    _coords._texCoord = TexCoord.xy;\n"
"    _coords._onex = vec2(1.00000000E+00/TextureSize.x, 0.00000000E+00);\n"
"    _coords._oney = vec2(0.00000000E+00, 1.00000000E+00/TextureSize.y);\n"
"    gl_Position = _r0006;\n"
"    COL0 = COLOR;\n"
"    TEX0.xy = TexCoord.xy;\n"
"    TEX1.xy = _coords._onex;\n"
"    TEX2.xy = _coords._oney;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"COMPAT_VARYING     vec2 _oney;\n"
"COMPAT_VARYING     vec2 _onex;\n"
"COMPAT_VARYING     vec2 _texCoord;\n"
"struct tex_coords {\n"
"    vec2 _texCoord;\n"
"    vec2 _onex;\n"
"    vec2 _oney;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"vec4 _TMP5;\n"
"vec4 _TMP10;\n"
"float _TMP9;\n"
"float _TMP8;\n"
"float _TMP7;\n"
"float _TMP6;\n"
"vec4 _TMP4;\n"
"vec4 _TMP3;\n"
"vec4 _TMP2;\n"
"vec4 _TMP1;\n"
"vec2 _TMP0;\n"
"input_dummy _IN1;\n"
"uniform sampler2D Texture;\n"
"vec2 _c0028;\n"
"vec2 _c0040;\n"
"vec2 _c0052;\n"
"vec4 _TMP73;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _coords;\n"
"    vec2 _pixel_center;\n"
"    vec2 _texture_coords;\n"
"    vec4 _color;\n"
"    float _dx;\n"
"    float _h_weight_00;\n"
"    vec2 _coords01;\n"
"    vec4 _colorNB;\n"
"    float _h_weight_01;\n"
"    float _dy;\n"
"    float _v_weight_00;\n"
"    vec2 _coords10;\n"
"    float _v_weight_10;\n"
"    _coords = TEX0.xy*TextureSize;\n"
"    _TMP0 = floor(_coords);\n"
"    _pixel_center = _TMP0 + vec2( 5.00000000E-01, 5.00000000E-01);\n"
"    _texture_coords = _pixel_center/TextureSize;\n"
"    _TMP1 = COMPAT_TEXTURE(Texture, _texture_coords);\n"
"    _TMP6 = pow(_TMP1.x, 2.40000010E+00);\n"
"    _TMP7 = pow(_TMP1.y, 2.40000010E+00);\n"
"    _TMP8 = pow(_TMP1.z, 2.40000010E+00);\n"
"    _TMP9 = pow(_TMP1.w, 2.40000010E+00);\n"
"    _color = vec4(_TMP6, _TMP7, _TMP8, _TMP9);\n"
"    _dx = _coords.x - _pixel_center.x;\n"
"    _h_weight_00 = _dx/8.99999976E-01;\n"
"    if (_h_weight_00 > 1.00000000E+00) { \n"
"        _h_weight_00 = 1.00000000E+00;\n"
"    } \n"
"    _h_weight_00 = 1.00000000E+00 - _h_weight_00*_h_weight_00;\n"
"    _h_weight_00 = _h_weight_00*_h_weight_00;\n"
"    _color = _color*vec4(_h_weight_00, _h_weight_00, _h_weight_00, _h_weight_00);\n"
"    if (_dx > 0.00000000E+00) { \n"
"        _coords01 = TEX1.xy;\n"
"        _dx = 1.00000000E+00 - _dx;\n"
"    } else {\n"
"        _coords01 = -TEX1.xy;\n"
"        _dx = 1.00000000E+00 + _dx;\n"
"    } \n"
"    _c0028 = _texture_coords + _coords01;\n"
"    _TMP2 = COMPAT_TEXTURE(Texture, _c0028);\n"
"    _TMP6 = pow(_TMP2.x, 2.40000010E+00);\n"
"    _TMP7 = pow(_TMP2.y, 2.40000010E+00);\n"
"    _TMP8 = pow(_TMP2.z, 2.40000010E+00);\n"
"    _TMP9 = pow(_TMP2.w, 2.40000010E+00);\n"
"    _colorNB = vec4(_TMP6, _TMP7, _TMP8, _TMP9);\n"
"    _h_weight_01 = _dx/8.99999976E-01;\n"
"    if (_h_weight_01 > 1.00000000E+00) { \n"
"        _h_weight_01 = 1.00000000E+00;\n"
"    } \n"
"    _h_weight_01 = 1.00000000E+00 - _h_weight_01*_h_weight_01;\n"
"    _h_weight_01 = _h_weight_01*_h_weight_01;\n"
"    _color = _color + _colorNB*vec4(_h_weight_01, _h_weight_01, _h_weight_01, _h_weight_01);\n"
"    _dy = _coords.y - _pixel_center.y;\n"
"    _v_weight_00 = _dy/6.49999976E-01;\n"
"    if (_v_weight_00 > 1.00000000E+00) { \n"
"        _v_weight_00 = 1.00000000E+00;\n"
"    } \n"
"    _v_weight_00 = 1.00000000E+00 - _v_weight_00*_v_weight_00;\n"
"    _v_weight_00 = _v_weight_00*_v_weight_00;\n"
"    _color = _color*vec4(_v_weight_00, _v_weight_00, _v_weight_00, _v_weight_00);\n"
"    if (_dy > 0.00000000E+00) { \n"
"        _coords10 = TEX2.xy;\n"
"        _dy = 1.00000000E+00 - _dy;\n"
"    } else {\n"
"        _coords10 = -TEX2.xy;\n"
"        _dy = 1.00000000E+00 + _dy;\n"
"    } \n"
"    _c0040 = _texture_coords + _coords10;\n"
"    _TMP3 = COMPAT_TEXTURE(Texture, _c0040);\n"
"    _TMP6 = pow(_TMP3.x, 2.40000010E+00);\n"
"    _TMP7 = pow(_TMP3.y, 2.40000010E+00);\n"
"    _TMP8 = pow(_TMP3.z, 2.40000010E+00);\n"
"    _TMP9 = pow(_TMP3.w, 2.40000010E+00);\n"
"    _colorNB = vec4(_TMP6, _TMP7, _TMP8, _TMP9);\n"
"    _v_weight_10 = _dy/6.49999976E-01;\n"
"    if (_v_weight_10 > 1.00000000E+00) { \n"
"        _v_weight_10 = 1.00000000E+00;\n"
"    } \n"
"    _v_weight_10 = 1.00000000E+00 - _v_weight_10*_v_weight_10;\n"
"    _v_weight_10 = _v_weight_10*_v_weight_10;\n"
"    _color = _color + _colorNB*vec4(_v_weight_10*_h_weight_00, _v_weight_10*_h_weight_00, _v_weight_10*_h_weight_00, _v_weight_10*_h_weight_00);\n"
"    _c0052 = _texture_coords + _coords01 + _coords10;\n"
"    _TMP4 = COMPAT_TEXTURE(Texture, _c0052);\n"
"    _TMP6 = pow(_TMP4.x, 2.40000010E+00);\n"
"    _TMP7 = pow(_TMP4.y, 2.40000010E+00);\n"
"    _TMP8 = pow(_TMP4.z, 2.40000010E+00);\n"
"    _TMP9 = pow(_TMP4.w, 2.40000010E+00);\n"
"    _colorNB = vec4(_TMP6, _TMP7, _TMP8, _TMP9);\n"
"    _color = _color + _colorNB*vec4(_v_weight_10*_h_weight_01, _v_weight_10*_h_weight_01, _v_weight_10*_h_weight_01, _v_weight_10*_h_weight_01);\n"
"    _color = _color*vec4( 1.45000005E+00, 1.45000005E+00, 1.45000005E+00, 1.45000005E+00);\n"
"    _TMP6 = pow(_color.x, 4.54545438E-01);\n"
"    _TMP7 = pow(_color.y, 4.54545438E-01);\n"
"    _TMP8 = pow(_color.z, 4.54545438E-01);\n"
"    _TMP9 = pow(_color.w, 4.54545438E-01);\n"
"    _TMP5 = vec4(_TMP6, _TMP7, _TMP8, _TMP9);\n"
"    _TMP10 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _TMP5);\n"
"    _TMP73 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP10);\n"
"    FragColor = vec4(_TMP73.x, _TMP73.y, _TMP73.z, 1.00000000E+00);\n"
"    return;\n"
"} \n"
"#endif\n"
},
