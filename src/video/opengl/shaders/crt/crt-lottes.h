{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"vec4 _oPosition1;\n"
"vec4 _r0007;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _oTex;\n"
"    _r0007 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0007 = _r0007 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0007 = _r0007 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0007 = _r0007 + VertexCoord.w*MVPMatrix[3];\n"
"    _oPosition1 = _r0007;\n"
"    _oTex = TexCoord.xy;\n"
"    gl_Position = _r0007;\n"
"    TEX0.xy = TexCoord.xy;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"vec4 _ret_0;\n"
"vec3 _TMP3;\n"
"float _TMP5;\n"
"float _TMP4;\n"
"float _TMP10;\n"
"float _TMP11;\n"
"vec2 _TMP1;\n"
"vec2 _TMP9;\n"
"vec2 _TMP14;\n"
"vec2 _TMP7;\n"
"vec4 _TMP13;\n"
"float _TMP16;\n"
"float _TMP15;\n"
"float _TMP18;\n"
"vec2 _TMP12;\n"
"vec2 _TMP8;\n"
"vec2 _TMP0;\n"
"uniform sampler2D Texture;\n"
"input_dummy _IN1;\n"
"vec2 _pos0025;\n"
"vec3 _a0027;\n"
"vec3 _b0027;\n"
"vec3 _c0027;\n"
"vec3 _TMP30;\n"
"vec2 _pos0031;\n"
"vec2 _x0033;\n"
"float _x0041;\n"
"float _x0045;\n"
"float _x0049;\n"
"vec3 _TMP50;\n"
"vec2 _pos0051;\n"
"vec2 _x0053;\n"
"float _x0061;\n"
"float _x0065;\n"
"float _x0069;\n"
"vec3 _TMP70;\n"
"vec2 _pos0071;\n"
"vec2 _x0073;\n"
"float _x0081;\n"
"float _x0085;\n"
"float _x0089;\n"
"vec2 _pos0091;\n"
"float _TMP94;\n"
"float _pos0095;\n"
"float _x0097;\n"
"float _TMP98;\n"
"float _x0101;\n"
"float _TMP102;\n"
"float _pos0103;\n"
"float _x0105;\n"
"vec3 _TMP108;\n"
"vec2 _pos0109;\n"
"vec2 _x0111;\n"
"float _x0119;\n"
"float _x0123;\n"
"float _x0127;\n"
"vec3 _TMP128;\n"
"vec2 _pos0129;\n"
"vec2 _x0131;\n"
"float _x0139;\n"
"float _x0143;\n"
"float _x0147;\n"
"vec3 _TMP148;\n"
"vec2 _pos0149;\n"
"vec2 _x0151;\n"
"float _x0159;\n"
"float _x0163;\n"
"float _x0167;\n"
"vec3 _TMP168;\n"
"vec2 _pos0169;\n"
"vec2 _x0171;\n"
"float _x0179;\n"
"float _x0183;\n"
"float _x0187;\n"
"vec3 _TMP188;\n"
"vec2 _pos0189;\n"
"vec2 _x0191;\n"
"float _x0199;\n"
"float _x0203;\n"
"float _x0207;\n"
"vec2 _pos0209;\n"
"float _TMP212;\n"
"float _pos0213;\n"
"float _x0215;\n"
"float _TMP216;\n"
"float _pos0217;\n"
"float _x0219;\n"
"float _TMP220;\n"
"float _x0223;\n"
"float _TMP224;\n"
"float _pos0225;\n"
"float _x0227;\n"
"float _TMP228;\n"
"float _pos0229;\n"
"float _x0231;\n"
"vec3 _TMP234;\n"
"vec2 _pos0235;\n"
"vec2 _x0237;\n"
"float _x0245;\n"
"float _x0249;\n"
"float _x0253;\n"
"vec3 _TMP254;\n"
"vec2 _pos0255;\n"
"vec2 _x0257;\n"
"float _x0265;\n"
"float _x0269;\n"
"float _x0273;\n"
"vec3 _TMP274;\n"
"vec2 _pos0275;\n"
"vec2 _x0277;\n"
"float _x0285;\n"
"float _x0289;\n"
"float _x0293;\n"
"vec2 _pos0295;\n"
"float _TMP298;\n"
"float _pos0299;\n"
"float _x0301;\n"
"float _TMP302;\n"
"float _x0305;\n"
"float _TMP306;\n"
"float _pos0307;\n"
"float _x0309;\n"
"vec2 _pos0313;\n"
"float _TMP316;\n"
"float _pos0317;\n"
"float _x0319;\n"
"vec2 _pos0323;\n"
"float _TMP326;\n"
"float _x0329;\n"
"vec2 _pos0333;\n"
"float _TMP336;\n"
"float _pos0337;\n"
"float _x0339;\n"
"vec2 _x0341;\n"
"vec2 _pos0343;\n"
"vec3 _mask0343;\n"
"float _TMP344;\n"
"float _x0345;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _pos9;\n"
"    vec3 _outColor;\n"
"    _pos0025 = TEX0.xy*(TextureSize.xy/InputSize.xy);\n"
"    _pos0025 = _pos0025*2.00000000E+00 - 1.00000000E+00;\n"
"    _pos0025 = _pos0025*vec2(1.00000000E+00 + _pos0025.y*_pos0025.y*3.09999995E-02, 1.00000000E+00 + _pos0025.x*_pos0025.x*4.10000011E-02);\n"
"    _TMP0 = _pos0025*5.00000000E-01 + 5.00000000E-01;\n"
"    _pos9 = _TMP0*(InputSize.xy/TextureSize.xy);\n"
"    _x0033 = _pos9*TextureSize.xy + vec2( -1.00000000E+00, -1.00000000E+00);\n"
"    _TMP12 = floor(_x0033);\n"
"    _pos0031 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0031.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0041 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0041, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0045 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0045, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0049 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0049, 2.40000010E+00);\n"
"    } \n"
"    _TMP30 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0053 = _pos9*TextureSize.xy + vec2( 0.00000000E+00, -1.00000000E+00);\n"
"    _TMP12 = floor(_x0053);\n"
"    _pos0051 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0051.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0061 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0061, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0065 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0065, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0069 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0069, 2.40000010E+00);\n"
"    } \n"
"    _TMP50 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0073 = _pos9*TextureSize.xy + vec2( 1.00000000E+00, -1.00000000E+00);\n"
"    _TMP12 = floor(_x0073);\n"
"    _pos0071 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0071.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0081 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0081, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0085 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0085, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0089 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0089, 2.40000010E+00);\n"
"    } \n"
"    _TMP70 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _pos0091 = _pos9*TextureSize.xy;\n"
"    _TMP14 = floor(_pos0091);\n"
"    _TMP7 = -((_pos0091 - _TMP14) - vec2( 5.00000000E-01, 5.00000000E-01));\n"
"    _pos0095 = _TMP7.x - 1.00000000E+00;\n"
"    _x0097 = -3.00000000E+00*_pos0095*_pos0095;\n"
"    _TMP94 = exp2(_x0097);\n"
"    _x0101 = -3.00000000E+00*_TMP7.x*_TMP7.x;\n"
"    _TMP98 = exp2(_x0101);\n"
"    _pos0103 = _TMP7.x + 1.00000000E+00;\n"
"    _x0105 = -3.00000000E+00*_pos0103*_pos0103;\n"
"    _TMP102 = exp2(_x0105);\n"
"    _a0027 = (_TMP30*_TMP94 + _TMP50*_TMP98 + _TMP70*_TMP102)/(_TMP94 + _TMP98 + _TMP102);\n"
"    _x0111 = _pos9*TextureSize.xy + vec2( -2.00000000E+00, 0.00000000E+00);\n"
"    _TMP12 = floor(_x0111);\n"
"    _pos0109 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0109.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0119 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0119, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0123 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0123, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0127 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0127, 2.40000010E+00);\n"
"    } \n"
"    _TMP108 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0131 = _pos9*TextureSize.xy + vec2( -1.00000000E+00, 0.00000000E+00);\n"
"    _TMP12 = floor(_x0131);\n"
"    _pos0129 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0129.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0139 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0139, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0143 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0143, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0147 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0147, 2.40000010E+00);\n"
"    } \n"
"    _TMP128 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0151 = _pos9*TextureSize.xy;\n"
"    _TMP12 = floor(_x0151);\n"
"    _pos0149 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0149.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0159 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0159, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0163 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0163, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0167 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0167, 2.40000010E+00);\n"
"    } \n"
"    _TMP148 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0171 = _pos9*TextureSize.xy + vec2( 1.00000000E+00, 0.00000000E+00);\n"
"    _TMP12 = floor(_x0171);\n"
"    _pos0169 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0169.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0179 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0179, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0183 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0183, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0187 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0187, 2.40000010E+00);\n"
"    } \n"
"    _TMP168 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0191 = _pos9*TextureSize.xy + vec2( 2.00000000E+00, 0.00000000E+00);\n"
"    _TMP12 = floor(_x0191);\n"
"    _pos0189 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0189.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0199 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0199, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0203 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0203, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0207 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0207, 2.40000010E+00);\n"
"    } \n"
"    _TMP188 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _pos0209 = _pos9*TextureSize.xy;\n"
"    _TMP14 = floor(_pos0209);\n"
"    _TMP8 = -((_pos0209 - _TMP14) - vec2( 5.00000000E-01, 5.00000000E-01));\n"
"    _pos0213 = _TMP8.x - 2.00000000E+00;\n"
"    _x0215 = -3.00000000E+00*_pos0213*_pos0213;\n"
"    _TMP212 = exp2(_x0215);\n"
"    _pos0217 = _TMP8.x - 1.00000000E+00;\n"
"    _x0219 = -3.00000000E+00*_pos0217*_pos0217;\n"
"    _TMP216 = exp2(_x0219);\n"
"    _x0223 = -3.00000000E+00*_TMP8.x*_TMP8.x;\n"
"    _TMP220 = exp2(_x0223);\n"
"    _pos0225 = _TMP8.x + 1.00000000E+00;\n"
"    _x0227 = -3.00000000E+00*_pos0225*_pos0225;\n"
"    _TMP224 = exp2(_x0227);\n"
"    _pos0229 = _TMP8.x + 2.00000000E+00;\n"
"    _x0231 = -3.00000000E+00*_pos0229*_pos0229;\n"
"    _TMP228 = exp2(_x0231);\n"
"    _b0027 = (_TMP108*_TMP212 + _TMP128*_TMP216 + _TMP148*_TMP220 + _TMP168*_TMP224 + _TMP188*_TMP228)/(_TMP212 + _TMP216 + _TMP220 + _TMP224 + _TMP228);\n"
"    _x0237 = _pos9*TextureSize.xy + vec2( -1.00000000E+00, 1.00000000E+00);\n"
"    _TMP12 = floor(_x0237);\n"
"    _pos0235 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0235.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0245 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0245, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0249 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0249, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0253 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0253, 2.40000010E+00);\n"
"    } \n"
"    _TMP234 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0257 = _pos9*TextureSize.xy + vec2( 0.00000000E+00, 1.00000000E+00);\n"
"    _TMP12 = floor(_x0257);\n"
"    _pos0255 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0255.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0265 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0265, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0269 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0269, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0273 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0273, 2.40000010E+00);\n"
"    } \n"
"    _TMP254 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _x0277 = _pos9*TextureSize.xy + vec2( 1.00000000E+00, 1.00000000E+00);\n"
"    _TMP12 = floor(_x0277);\n"
"    _pos0275 = (_TMP12 + vec2( 5.00000000E-01, 5.00000000E-01))/TextureSize.xy;\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _pos0275.xy);\n"
"    if (_TMP13.x <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.x/1.29200001E+01;\n"
"    } else {\n"
"        _x0285 = (_TMP13.x + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0285, 2.40000010E+00);\n"
"    } \n"
"    _TMP15 = _TMP18;\n"
"    if (_TMP13.y <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.y/1.29200001E+01;\n"
"    } else {\n"
"        _x0289 = (_TMP13.y + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0289, 2.40000010E+00);\n"
"    } \n"
"    _TMP16 = _TMP18;\n"
"    if (_TMP13.z <= 4.04499993E-02) { \n"
"        _TMP18 = _TMP13.z/1.29200001E+01;\n"
"    } else {\n"
"        _x0293 = (_TMP13.z + 5.49999997E-02)/1.05499995E+00;\n"
"        _TMP18 = pow(_x0293, 2.40000010E+00);\n"
"    } \n"
"    _TMP274 = vec3(_TMP15, _TMP16, _TMP18);\n"
"    _pos0295 = _pos9*TextureSize.xy;\n"
"    _TMP14 = floor(_pos0295);\n"
"    _TMP7 = -((_pos0295 - _TMP14) - vec2( 5.00000000E-01, 5.00000000E-01));\n"
"    _pos0299 = _TMP7.x - 1.00000000E+00;\n"
"    _x0301 = -3.00000000E+00*_pos0299*_pos0299;\n"
"    _TMP298 = exp2(_x0301);\n"
"    _x0305 = -3.00000000E+00*_TMP7.x*_TMP7.x;\n"
"    _TMP302 = exp2(_x0305);\n"
"    _pos0307 = _TMP7.x + 1.00000000E+00;\n"
"    _x0309 = -3.00000000E+00*_pos0307*_pos0307;\n"
"    _TMP306 = exp2(_x0309);\n"
"    _c0027 = (_TMP234*_TMP298 + _TMP254*_TMP302 + _TMP274*_TMP306)/(_TMP298 + _TMP302 + _TMP306);\n"
"    _pos0313 = _pos9*TextureSize.xy;\n"
"    _TMP14 = floor(_pos0313);\n"
"    _TMP9 = -((_pos0313 - _TMP14) - vec2( 5.00000000E-01, 5.00000000E-01));\n"
"    _pos0317 = _TMP9.y + -1.00000000E+00;\n"
"    _x0319 = -8.00000000E+00*_pos0317*_pos0317;\n"
"    _TMP316 = exp2(_x0319);\n"
"    _pos0323 = _pos9*TextureSize.xy;\n"
"    _TMP14 = floor(_pos0323);\n"
"    _TMP9 = -((_pos0323 - _TMP14) - vec2( 5.00000000E-01, 5.00000000E-01));\n"
"    _x0329 = -8.00000000E+00*_TMP9.y*_TMP9.y;\n"
"    _TMP326 = exp2(_x0329);\n"
"    _pos0333 = _pos9*TextureSize.xy;\n"
"    _TMP14 = floor(_pos0333);\n"
"    _TMP9 = -((_pos0333 - _TMP14) - vec2( 5.00000000E-01, 5.00000000E-01));\n"
"    _pos0337 = _TMP9.y + 1.00000000E+00;\n"
"    _x0339 = -8.00000000E+00*_pos0337*_pos0337;\n"
"    _TMP336 = exp2(_x0339);\n"
"    _outColor = _a0027*_TMP316 + _b0027*_TMP326 + _c0027*_TMP336;\n"
"    _x0341 = TEX0.xy*(TextureSize.xy/InputSize.xy)*OutputSize.xy;\n"
"    _TMP1 = floor(_x0341);\n"
"    _pos0343 = _TMP1 + vec2( 5.00000000E-01, 5.00000000E-01);\n"
"    _pos0343.x = _pos0343.x + _pos0343.y*3.00000000E+00;\n"
"    _mask0343 = vec3( 5.00000000E-01, 5.00000000E-01, 5.00000000E-01);\n"
"    _x0345 = _pos0343.x/6.00000000E+00;\n"
"    _TMP344 = fract(_x0345);\n"
"    if (_TMP344 < 3.33000004E-01) { \n"
"        _mask0343.x = 1.50000000E+00;\n"
"    } else {\n"
"        if (_TMP344 < 6.66000009E-01) { \n"
"            _mask0343.y = 1.50000000E+00;\n"
"        } else {\n"
"            _mask0343.z = 1.50000000E+00;\n"
"        } \n"
"    } \n"
"    _outColor.xyz = _outColor.xyz*_mask0343;\n"
"    if (_outColor.x < 3.13080009E-03) { \n"
"        _TMP10 = _outColor.x*1.29200001E+01;\n"
"    } else {\n"
"        _TMP11 = pow(_outColor.x, 4.16660011E-01);\n"
"        _TMP10 = 1.05499995E+00*_TMP11 - 5.49999997E-02;\n"
"    } \n"
"    _TMP4 = _TMP10;\n"
"    if (_outColor.y < 3.13080009E-03) { \n"
"        _TMP10 = _outColor.y*1.29200001E+01;\n"
"    } else {\n"
"        _TMP11 = pow(_outColor.y, 4.16660011E-01);\n"
"        _TMP10 = 1.05499995E+00*_TMP11 - 5.49999997E-02;\n"
"    } \n"
"    _TMP5 = _TMP10;\n"
"    if (_outColor.z < 3.13080009E-03) { \n"
"        _TMP10 = _outColor.z*1.29200001E+01;\n"
"    } else {\n"
"        _TMP11 = pow(_outColor.z, 4.16660011E-01);\n"
"        _TMP10 = 1.05499995E+00*_TMP11 - 5.49999997E-02;\n"
"    } \n"
"    _TMP3 = vec3(_TMP4, _TMP5, _TMP10);\n"
"    _ret_0 = vec4(_TMP3.x, _TMP3.y, _TMP3.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
