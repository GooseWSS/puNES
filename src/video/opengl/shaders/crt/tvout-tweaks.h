{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"};\n"
"vec4 _outPosition1;\n"
"vec4 _r0010;\n"
"vec4 _v0010;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _outTexCoord;\n"
"    _v0010 = vec4(float(VertexCoord.x), float(VertexCoord.y), float(VertexCoord.z), float(VertexCoord.w));\n"
"    _r0010 = _v0010.x*MVPMatrix[0];\n"
"    _r0010 = _r0010 + _v0010.y*MVPMatrix[1];\n"
"    _r0010 = _r0010 + _v0010.z*MVPMatrix[2];\n"
"    _r0010 = _r0010 + _v0010.w*MVPMatrix[3];\n"
"    _outPosition1 = vec4(float(_r0010.x), float(_r0010.y), float(_r0010.z), float(_r0010.w));\n"
"    _outTexCoord = TexCoord.xy;\n"
"    gl_Position = _outPosition1;\n"
"    TEX0.xy = TexCoord.xy;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"};\n"
"vec4 _ret_0;\n"
"float _TMP51;\n"
"float _TMP47;\n"
"float _TMP44;\n"
"float _TMP41;\n"
"float _TMP50;\n"
"float _TMP49;\n"
"float _TMP48;\n"
"float _TMP46;\n"
"float _TMP45;\n"
"float _TMP43;\n"
"float _TMP42;\n"
"float _TMP40;\n"
"vec4 _TMP39;\n"
"float _TMP38;\n"
"float _TMP34;\n"
"float _TMP31;\n"
"float _TMP28;\n"
"float _TMP37;\n"
"float _TMP36;\n"
"float _TMP35;\n"
"float _TMP33;\n"
"float _TMP32;\n"
"float _TMP30;\n"
"float _TMP29;\n"
"float _TMP27;\n"
"vec4 _TMP26;\n"
"float _TMP25;\n"
"float _TMP21;\n"
"float _TMP18;\n"
"float _TMP15;\n"
"float _TMP24;\n"
"float _TMP23;\n"
"float _TMP22;\n"
"float _TMP20;\n"
"float _TMP19;\n"
"float _TMP17;\n"
"float _TMP16;\n"
"float _TMP14;\n"
"vec4 _TMP13;\n"
"float _TMP12;\n"
"float _TMP8;\n"
"float _TMP5;\n"
"float _TMP2;\n"
"float _TMP11;\n"
"float _TMP10;\n"
"float _TMP9;\n"
"float _TMP7;\n"
"float _TMP6;\n"
"float _TMP4;\n"
"float _TMP3;\n"
"float _TMP1;\n"
"vec4 _TMP0;\n"
"uniform sampler2D Texture;\n"
"input_dummy _IN1;\n"
"float _TMP57;\n"
"float _x0058;\n"
"vec2 _c0062;\n"
"float _a0068;\n"
"float _b0068;\n"
"float _a0072;\n"
"float _b0072;\n"
"float _a0074;\n"
"float _a0078;\n"
"float _b0078;\n"
"float _b0080;\n"
"float _a0084;\n"
"float _b0084;\n"
"float _b0086;\n"
"float _a0088;\n"
"vec2 _c0090;\n"
"float _a0096;\n"
"float _b0096;\n"
"float _a0100;\n"
"float _b0100;\n"
"float _a0102;\n"
"float _a0106;\n"
"float _b0106;\n"
"float _b0108;\n"
"float _a0112;\n"
"float _b0112;\n"
"float _b0114;\n"
"float _a0116;\n"
"vec2 _c0118;\n"
"float _a0124;\n"
"float _b0124;\n"
"float _a0128;\n"
"float _b0128;\n"
"float _a0130;\n"
"float _a0134;\n"
"float _b0134;\n"
"float _b0136;\n"
"float _a0140;\n"
"float _b0140;\n"
"float _b0142;\n"
"float _a0144;\n"
"vec2 _c0146;\n"
"float _a0152;\n"
"float _b0152;\n"
"float _a0156;\n"
"float _b0156;\n"
"float _a0158;\n"
"float _a0162;\n"
"float _b0162;\n"
"float _b0164;\n"
"float _a0168;\n"
"float _b0168;\n"
"float _b0170;\n"
"float _a0172;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec3 _tempColor;\n"
"    float _oneT;\n"
"    float _oneI;\n"
"    float _X;\n"
"    _x0058 = TEX0.x*TextureSize.x - 5.00000000E-01;\n"
"    _TMP57 = fract(_x0058);\n"
"    _oneT = 1.00000000E+00/TextureSize.x;\n"
"    _oneI = float((1.00000000E+00/InputSize.x));\n"
"    _X = _TMP57 - -1.00000000E+00;\n"
"    _c0062 = vec2(TEX0.x - _X*_oneT, TEX0.y);\n"
"    _TMP0 = COMPAT_TEXTURE(Texture, _c0062);\n"
"    _TMP1 = abs(_X);\n"
"    _a0068 = _TMP1 + 5.00000000E-01;\n"
"    _b0068 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP2 = min(_a0068, _b0068);\n"
"    _TMP3 = abs(_X);\n"
"    _a0072 = _TMP3 + 5.00000000E-01;\n"
"    _b0072 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP4 = min(_a0072, _b0072);\n"
"    _a0074 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP4;\n"
"    _TMP5 = sin(_a0074);\n"
"    _TMP6 = abs(_X);\n"
"    _a0078 = _TMP6 - 5.00000000E-01;\n"
"    _b0078 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP7 = max(_a0078, _b0078);\n"
"    _b0080 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP8 = min(_TMP7, _b0080);\n"
"    _TMP9 = abs(_X);\n"
"    _a0084 = _TMP9 - 5.00000000E-01;\n"
"    _b0084 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP10 = max(_a0084, _b0084);\n"
"    _b0086 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP11 = min(_TMP10, _b0086);\n"
"    _a0088 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP11;\n"
"    _TMP12 = sin(_a0088);\n"
"    _tempColor = _TMP0.xyz*((((3.14159274E+00*2.56000000E+02*_oneI*_TMP2 + _TMP5) - 3.14159274E+00*2.56000000E+02*_oneI*_TMP8) - _TMP12)/6.28318548E+00);\n"
"    _c0090 = vec2(TEX0.x - _TMP57*_oneT, TEX0.y);\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, _c0090);\n"
"    _TMP14 = abs(_TMP57);\n"
"    _a0096 = _TMP14 + 5.00000000E-01;\n"
"    _b0096 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP15 = min(_a0096, _b0096);\n"
"    _TMP16 = abs(_TMP57);\n"
"    _a0100 = _TMP16 + 5.00000000E-01;\n"
"    _b0100 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP17 = min(_a0100, _b0100);\n"
"    _a0102 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP17;\n"
"    _TMP18 = sin(_a0102);\n"
"    _TMP19 = abs(_TMP57);\n"
"    _a0106 = _TMP19 - 5.00000000E-01;\n"
"    _b0106 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP20 = max(_a0106, _b0106);\n"
"    _b0108 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP21 = min(_TMP20, _b0108);\n"
"    _TMP22 = abs(_TMP57);\n"
"    _a0112 = _TMP22 - 5.00000000E-01;\n"
"    _b0112 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP23 = max(_a0112, _b0112);\n"
"    _b0114 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP24 = min(_TMP23, _b0114);\n"
"    _a0116 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP24;\n"
"    _TMP25 = sin(_a0116);\n"
"    _tempColor = _tempColor + _TMP13.xyz*((((3.14159274E+00*2.56000000E+02*_oneI*_TMP15 + _TMP18) - 3.14159274E+00*2.56000000E+02*_oneI*_TMP21) - _TMP25)/6.28318548E+00);\n"
"    _X = _TMP57 - 1.00000000E+00;\n"
"    _c0118 = vec2(TEX0.x - _X*_oneT, TEX0.y);\n"
"    _TMP26 = COMPAT_TEXTURE(Texture, _c0118);\n"
"    _TMP27 = abs(_X);\n"
"    _a0124 = _TMP27 + 5.00000000E-01;\n"
"    _b0124 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP28 = min(_a0124, _b0124);\n"
"    _TMP29 = abs(_X);\n"
"    _a0128 = _TMP29 + 5.00000000E-01;\n"
"    _b0128 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP30 = min(_a0128, _b0128);\n"
"    _a0130 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP30;\n"
"    _TMP31 = sin(_a0130);\n"
"    _TMP32 = abs(_X);\n"
"    _a0134 = _TMP32 - 5.00000000E-01;\n"
"    _b0134 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP33 = max(_a0134, _b0134);\n"
"    _b0136 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP34 = min(_TMP33, _b0136);\n"
"    _TMP35 = abs(_X);\n"
"    _a0140 = _TMP35 - 5.00000000E-01;\n"
"    _b0140 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP36 = max(_a0140, _b0140);\n"
"    _b0142 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP37 = min(_TMP36, _b0142);\n"
"    _a0144 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP37;\n"
"    _TMP38 = sin(_a0144);\n"
"    _tempColor = _tempColor + _TMP26.xyz*((((3.14159274E+00*2.56000000E+02*_oneI*_TMP28 + _TMP31) - 3.14159274E+00*2.56000000E+02*_oneI*_TMP34) - _TMP38)/6.28318548E+00);\n"
"    _X = _TMP57 - 2.00000000E+00;\n"
"    _c0146 = vec2(TEX0.x - _X*_oneT, TEX0.y);\n"
"    _TMP39 = COMPAT_TEXTURE(Texture, _c0146);\n"
"    _TMP40 = abs(_X);\n"
"    _a0152 = _TMP40 + 5.00000000E-01;\n"
"    _b0152 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP41 = min(_a0152, _b0152);\n"
"    _TMP42 = abs(_X);\n"
"    _a0156 = _TMP42 + 5.00000000E-01;\n"
"    _b0156 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP43 = min(_a0156, _b0156);\n"
"    _a0158 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP43;\n"
"    _TMP44 = sin(_a0158);\n"
"    _TMP45 = abs(_X);\n"
"    _a0162 = _TMP45 - 5.00000000E-01;\n"
"    _b0162 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP46 = max(_a0162, _b0162);\n"
"    _b0164 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP47 = min(_TMP46, _b0164);\n"
"    _TMP48 = abs(_X);\n"
"    _a0168 = _TMP48 - 5.00000000E-01;\n"
"    _b0168 = -1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP49 = max(_a0168, _b0168);\n"
"    _b0170 = 1.00000000E+00/(2.56000000E+02*_oneI);\n"
"    _TMP50 = min(_TMP49, _b0170);\n"
"    _a0172 = 3.14159274E+00*2.56000000E+02*_oneI*_TMP50;\n"
"    _TMP51 = sin(_a0172);\n"
"    _tempColor = _tempColor + _TMP39.xyz*((((3.14159274E+00*2.56000000E+02*_oneI*_TMP41 + _TMP44) - 3.14159274E+00*2.56000000E+02*_oneI*_TMP47) - _TMP51)/6.28318548E+00);\n"
"    _ret_0 = vec4(_tempColor.x, _tempColor.y, _tempColor.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
